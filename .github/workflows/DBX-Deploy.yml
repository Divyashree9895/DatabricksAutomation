# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json


# TO DO: Write A New Package For Setting Environment Variables From A Parameters File. 

name: Databricks Deploy

on: push 
#workflow_dispatch

permissions:
      id-token:               write
      contents:               read

jobs:

  UpdateRepos:
    name:                     UpdateRepo
    runs-on:                  ubuntu-latest
    strategy:
      matrix:
        #Azure Resource Environments
        environments:          [Development, Production]    
    steps:
      - uses:                 actions/checkout@v3  
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name:                 'Az CLI login ${{ matrix.environments }}'
        uses:                 azure/login@v1
        with:
          creds:              ${{secrets.AZURE_CREDENTIALS}}

      - name:                 JSON To Env
        uses:                 antifree/json-to-variables@v1.0.1
        with:
          filename:           '.github/workflows/Global_Parameters/${{ matrix.environments }}.json'
          prefix:             param

      - name:                 Authenticate to DBX SP
        run:                  bash ./.github/workflows/Utilities/Utils-DBX-SP-Authenticate.sh
        env:
          ARM_CLIENT_ID:      ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET:  ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID:      ${{ secrets.ARM_TENANT_ID }}
      

  
      # "Syntax error: redirection unexpected" : Change from 'sh' to 'bash'
      #- name:                 Update Databricks Repo SP Folders
      #  run:                  bash ./.github/workflows/Utilities/Utils-Repo-Update-All.sh
      #  env:
      #    environment:        ${{ matrix.environments }}


      - name:                 Test Databricks Host Parameters 
        run:                  bash ./.github/workflows/Utilities/Utils-Test.sh
        env:
          environment:        ${{ matrix.environments }}

      - name:                 Install Python dependencies
        uses:                 py-actions/py-dependency-install@v3
        with:
          path:               "src/requirements.txt"

      - name:                 Upload Wheel Files To Cluster 
        run:                  python src/tutorial/scripts/install_dbkframework.py -c "src/tutorial/cluster_config.json"
        env:
          environment:        ${{ matrix.environments }}
  





  #DBX_CICD_Deployment:
  #  name:                     DBX_CICD_Deployment
  #  runs-on:                  ubuntu-latest
  #  strategy:
  #    matrix:
  #      environments:          [Development, Production]    
  #  steps:
  #    - uses:                 actions/checkout@v3  


      #  az ad sp create-for-rbac -n DevOpsAgentSP --role Owner --scopes /subscriptions/4f1bc772-7792-4285-99d9-3463b8d7f994 --sdk-auth
      # Login To testappciaran. This Has Higher Privileges/ Ownership To Create Resources/RBACs. We Generally Wouldn't Be Given 
      # SP Secrets etc. As This Would Confer Too Much Power. Super Users Will Use This Login. DBX SP should have contributor rights.
      # It is important to set up federated connections (below)
      # https://goodworkaround.com/2021/12/21/another-deep-dive-into-azure-ad-workload-identity-federation-using-github-actions/


   #   - name:                 'Az CLI login ${{ matrix.environments }}'
   #     uses:                 azure/login@v1
   #     with:
   #       creds:              ${{secrets.AZURE_CREDENTIALS}}
      
        
   #   - name:                 JSON To Env
   #     uses:                 antifree/json-to-variables@v1.0.1
   #     with:
   #       filename:           '.github/workflows/Global_Parameters/${{ matrix.environments }}.json'
   #       prefix:             param

      #- name:                 Deploy DBX CICD Azure Resources
      #  run:                  sh ./.github/workflows/Utilities/Utils-Azure-Resources.sh
      #  env:
      #    environment:        ${{ matrix.environments }}

      #- name:                 Assign RBAC Permissions 
      #  run:                  sh ./.github/workflows/Utilities/Utils-Assign-RBAC.sh
      #  env:
      #    environment:        ${{ matrix.environments }}

      # Switch To DBX SP.
      # Day To Day Use Interacting With Databricks API Does Not Require God Rights dbxsp. The Principal of Zero Trust Applies.
      # Therefore We Use The DBX SP (Only Has Databricks Custom Role Assignments - No Owner Permissions etc), For Interacting With Databricks...
      # API To Create Clusters/ Jobs etc. Might be worth giving sp contributor right

  #    - name:                 Authenticate to DBX SP
  #      run:                  bash ./.github/workflows/Utilities/Utils-DBX-SP-Authenticate.sh
  #      env:
  #        ARM_CLIENT_ID:      ${{ secrets.ARM_CLIENT_ID }}
  #        ARM_CLIENT_SECRET:  ${{ secrets.ARM_CLIENT_SECRET }}
  #        ARM_TENANT_ID:      ${{ secrets.ARM_TENANT_ID }}

  #    - name:                 Create And Store PAT Token In Key Vault
  #      run:                  bash ./.github/workflows/Utilities/Utils-Create-PAToken.sh

  #    - name:                 Create Secret Scopes
  #      run:                  bash ./.github/workflows/Utilities/Utils-Create-Scope.sh
  #    
  #    - name:                 Create Clusters
  #      run:                  bash ./.github/workflows/Utilities/Utils-Create-Cluster.sh
  #      env:
  #        environment:        ${{ matrix.environments }}
  #    - name:                 Create Repos
  #      run:                  sh ./.github/workflows/Utilities/Utils-Repo-Create.sh
  #      env:
  #        environment:        ${{ matrix.environments }}
      
  

 


