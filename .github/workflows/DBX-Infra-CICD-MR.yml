# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json


# TO DO: Write A New Package For Setting Environment Variables From A Parameters File. 

# If Main Branch Updates, Then We Need The REPO Production Folder in ALL Environments (Production/Testing/Development) To Update
name: Infra - Merge Request - Deploy to Dev
on:  
  pull_request:
    branches:
      - main
    paths:
      - Infrastructure
    types: [open]


permissions:
      id-token:               write
      contents:               read

jobs:
  DeployToDevInfra:
    name:                     Infra - Merge Request - Deploy to Dev
    runs-on:                  ubuntu-latest
    strategy:
      matrix:
        environments:          [Development]    
    steps:
      - uses:                  actions/checkout@v3

      # az ad sp create-for-rbac -n DevOpsAgentSP --role Owner --scopes /subscriptions/4f1bc772-7792-4285-99d9-3463b8d7f994 --sdk-auth
      
      # Login To testappciaran. This Has Higher Privileges/ Ownership To Create Resources/RBACs. We Generally Wouldn't Be Given 
      # SP Secrets etc. As This Would Confer Too Much Power. Super Users Will Use This Login. DBX SP should have contributor rights.
      
      # It is important to set up federated connections (below)
      # https://goodworkaround.com/2021/12/21/another-deep-dive-into-azure-ad-workload-identity-federation-using-github-actions/


      - name:                 Azure Login - ${{ matrix.environments }}
        uses:                 azure/login@v1
        with:
          creds:              ${{secrets.AZURE_CREDENTIALS}}
    

      - name:                 Store JSON Param File Variables As Environ Variables
        uses:                 antifree/json-to-variables@v1.0.1
        with:
          filename:           '.github/workflows/Pipeline_Param/${{ matrix.environments }}.json'
          prefix:             param


      - name:                 Deploy DBX CICD Azure Resources
        run:                  sh ./.github/workflows/Utilities/Utils-Azure-Resources.sh
        env:
          environment:        ${{ matrix.environments }}


    